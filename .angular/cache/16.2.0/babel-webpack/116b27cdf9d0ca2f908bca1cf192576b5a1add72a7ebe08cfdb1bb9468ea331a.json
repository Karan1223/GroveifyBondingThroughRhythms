{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AlbumService {\n  constructor(http) {\n    this.http = http;\n    this.base_url = 'https://api.spotify.com/v1';\n  }\n  getCountries() {\n    const endpoint = 'https://restcountries.com/v3.1/all';\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint);\n  }\n  getAlbums() {\n    const id = '4aawyAB9vmqN3uQ7FjRGTy';\n    const endpoint = `${this.base_url}/albums/${id}`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    console.log(headers);\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n  searchArtist(name) {\n    const endpoint = `${this.base_url}/search?q=${name}&type=artist`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n  getArtist(id) {\n    const endpoint = `${this.base_url}/artists/${id}`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n  getArtistsAlbum(id) {\n    const endpoint = `${this.base_url}/artists/${id}/albums`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n  getArtistsTopTracks(id, country) {\n    const endpoint = `${this.base_url}/artists/${id}/top-tracks?market=${country}`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n  getRelatedArtists(id) {\n    const endpoint = `${this.base_url}/artists/${id}/related-artists`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n  getTopArtistsThismonth(range) {\n    const endpoint = `${this.base_url}/me/top/artists?time_range=${range}&limit=10&offset=0`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n  getTopTracksThismonth(range) {\n    const endpoint = `${this.base_url}/me/top/tracks?time_range=${range}&limit=10&offset=0`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n  getCurrentUserPlaylist() {\n    const endpoint = `${this.base_url}/me/playlists?limit=50&offset=0`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`\n    });\n    return this.http.get(endpoint, {\n      headers: headers\n    });\n  }\n}\n_class = AlbumService;\n_class.ɵfac = function AlbumService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","AlbumService","constructor","http","base_url","getCountries","endpoint","get","getAlbums","id","headers","Authorization","localStorage","getItem","console","log","searchArtist","name","getArtist","getArtistsAlbum","getArtistsTopTracks","country","getRelatedArtists","getTopArtistsThismonth","range","getTopTracksThismonth","getCurrentUserPlaylist","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/karanpunjabi/Documents/Projects/Spotify/Groveify-BondingThroughRhythms /src/app/services/album.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlbumService {\n  base_url: string = 'https://api.spotify.com/v1';\n\n  constructor(private http: HttpClient) {}\n\n  getCountries(): Observable<any> {\n    const endpoint = 'https://restcountries.com/v3.1/all';\n\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint);\n  }\n\n  getAlbums(): Observable<any> {\n    const id = '4aawyAB9vmqN3uQ7FjRGTy';\n    const endpoint = `${this.base_url}/albums/${id}`;\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n    console.log(headers);\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, { headers: headers });\n  }\n\n  searchArtist(name: string): Observable<any> {\n    const endpoint = `${this.base_url}/search?q=${name}&type=artist`;\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, { headers: headers });\n  }\n\n  getArtist(id: string): Observable<any> {\n    const endpoint = `${this.base_url}/artists/${id}`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, { headers: headers });\n  }\n\n  getArtistsAlbum(id: string): Observable<any> {\n    const endpoint = `${this.base_url}/artists/${id}/albums`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, { headers: headers });\n  }\n\n  getArtistsTopTracks(id: string, country: string): Observable<any> {\n    const endpoint = `${this.base_url}/artists/${id}/top-tracks?market=${country}`;\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, { headers: headers });\n  }\n\n  getRelatedArtists(id: string): Observable<any> {\n    const endpoint = `${this.base_url}/artists/${id}/related-artists`;\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n\n    // Use the HttpClient to make the GET request\n    return this.http.get(endpoint, { headers: headers });\n  }\n\n  getTopArtistsThismonth(range: string): Observable<any> {\n    const endpoint = `${this.base_url}/me/top/artists?time_range=${range}&limit=10&offset=0`;\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n\n    return this.http.get(endpoint, { headers: headers });\n  }\n\n  getTopTracksThismonth(range: string): Observable<any> {\n    const endpoint = `${this.base_url}/me/top/tracks?time_range=${range}&limit=10&offset=0`;\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n\n    return this.http.get(endpoint, { headers: headers });\n  }\n\n  getCurrentUserPlaylist(): Observable<any> {\n    const endpoint = `${this.base_url}/me/playlists?limit=50&offset=0`;\n\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n    });\n\n    return this.http.get(endpoint, { headers: headers });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}