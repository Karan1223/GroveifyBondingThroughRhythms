{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/token.service\";\nimport * as i3 from \"@angular/common/http\";\nexport class ProcessingComponent {\n  constructor(route, tokenService, http, router) {\n    this.route = route;\n    this.tokenService = tokenService;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      const sessionIdentifier = params['session'];\n      if (sessionIdentifier) {\n        // Make a request to your backend to get tokens using the session identifier\n        this.http.get(`http://localhost:8888/get-tokens?session=${sessionIdentifier}`).subscribe(res => {\n          if (res) {\n            const user = JSON.stringify(res.user_profile);\n            // Store the response containing user information, access and referesh token in localStorage\n            localStorage.setItem('user_profile', user);\n            localStorage.setItem('access_token', res.access_token);\n            localStorage.setItem('referesh_token', res.referesh_token);\n            this.tokenService.setToken(res.access_token);\n            this.router.navigate(['/home'], {\n              replaceUrl: true\n            });\n          } else {\n            console.log('No user for found');\n          }\n        });\n      }\n    });\n  }\n}\n_class = ProcessingComponent;\n_class.ɵfac = function ProcessingComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-processing\"]],\n  decls: 2,\n  vars: 0,\n  template: function ProcessingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"processing works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9jZXNzaW5nLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VydmljZXMvcHJvY2Vzc2luZ1NlcnZpY2UvcHJvY2Vzc2luZy9wcm9jZXNzaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ProcessingComponent","constructor","route","tokenService","http","router","ngOnInit","queryParams","subscribe","params","sessionIdentifier","get","res","user","JSON","stringify","user_profile","localStorage","setItem","access_token","referesh_token","setToken","navigate","replaceUrl","console","log","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","TokenService","i3","HttpClient","Router","selectors","decls","vars","template","ProcessingComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/karanpunjabi/Documents/Projects/Spotify/Groveify-BondingThroughRhythms /src/app/services/processingService/processing/processing.component.ts","/Users/karanpunjabi/Documents/Projects/Spotify/Groveify-BondingThroughRhythms /src/app/services/processingService/processing/processing.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TokenService } from 'src/app/services/token.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-processing',\n  templateUrl: './processing.component.html',\n  styleUrls: ['./processing.component.css'],\n})\nexport class ProcessingComponent {\n  constructor(\n    private route: ActivatedRoute,\n    private tokenService: TokenService,\n    private http: HttpClient,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      const sessionIdentifier = params['session'];\n\n      if (sessionIdentifier) {\n        // Make a request to your backend to get tokens using the session identifier\n        this.http\n          .get(`http://localhost:8888/get-tokens?session=${sessionIdentifier}`)\n          .subscribe((res: any) => {\n            if (res) {\n              const user = JSON.stringify(res.user_profile);\n\n              // Store the response containing user information, access and referesh token in localStorage\n              localStorage.setItem('user_profile', user);\n              localStorage.setItem('access_token', res.access_token);\n              localStorage.setItem('referesh_token', res.referesh_token);\n\n              this.tokenService.setToken(res.access_token);\n              this.router.navigate(['/home'], { replaceUrl: true });\n            } else {\n              console.log('No user for found');\n            }\n          });\n      }\n    });\n  }\n}\n","<p>processing works!</p>\n"],"mappings":";;;;;AAUA,OAAM,MAAOA,mBAAmB;EAC9BC,YACUC,KAAqB,EACrBC,YAA0B,EAC1BC,IAAgB,EACjBC,MAAc;IAHb,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,IAAI,GAAJA,IAAI;IACL,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,WAAW,CAACC,SAAS,CAAEC,MAAM,IAAI;MAC1C,MAAMC,iBAAiB,GAAGD,MAAM,CAAC,SAAS,CAAC;MAE3C,IAAIC,iBAAiB,EAAE;QACrB;QACA,IAAI,CAACN,IAAI,CACNO,GAAG,CAAC,4CAA4CD,iBAAiB,EAAE,CAAC,CACpEF,SAAS,CAAEI,GAAQ,IAAI;UACtB,IAAIA,GAAG,EAAE;YACP,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAACI,YAAY,CAAC;YAE7C;YACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,IAAI,CAAC;YAC1CI,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEN,GAAG,CAACO,YAAY,CAAC;YACtDF,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEN,GAAG,CAACQ,cAAc,CAAC;YAE1D,IAAI,CAACjB,YAAY,CAACkB,QAAQ,CAACT,GAAG,CAACO,YAAY,CAAC;YAC5C,IAAI,CAACd,MAAM,CAACiB,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;cAAEC,UAAU,EAAE;YAAI,CAAE,CAAC;WACtD,MAAM;YACLC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;;QAEpC,CAAC,CAAC;;IAER,CAAC,CAAC;EACJ;;SAjCWzB,mBAAmB;;mBAAnBA,MAAmB,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,UAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAM,MAAA;AAAA;;QAAnBlC,MAAmB;EAAAmC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVhCd,EAAA,CAAAgB,cAAA,QAAG;MAAAhB,EAAA,CAAAiB,MAAA,wBAAiB;MAAAjB,EAAA,CAAAkB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}